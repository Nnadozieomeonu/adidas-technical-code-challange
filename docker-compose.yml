version: '3.7'
services:

  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 15672:15672
      - 5672:5672
    labels:
      NAME: rabbitmq
    networks:
      - adidas-network
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq


  docker-mysql:
    image: mysql:5.7
    restart: always
    environment:
      # Password for root access
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: user
      MYSQL_USER: password
      MYSQL_PASSWORD: password
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - adidas-network

  #back-end Spring Boot Application for service discovery service
  discovery-server:
    #the docker file in scrum-app build the jar and provides the docker image with the following name.
    build: ./discovery-server
    container_name: discovery-server
    mem_limit: 350m
    ports:
      - 8761:8761 # Forward the exposed port 8761 to the container to port 8761 on the host machine
    networks:
      - adidas-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://discovery-server:8761" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  #back-end Spring Boot Application for api gateway
  api-gateway:
    #the docker file in scrum-app build the jar and provides the docker image with the following name.
    build: ./api-gateway-service
    container_name: api-gateway-service
    ports:
      - 9090:9090 # Forward the exposed port 8080 to the container to port 8080 on the host machine
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    networks:
      - adidas-network
    links:
      - discovery-server
    depends_on:
      - discovery-server
    restart: on-failure

  authorization-server:
    #the docker file in scrum-app build the jar and provides the docker image with the following name.
    build: ./authorization-service
    container_name: authorization-server
    ports:
      - 7600:7600 # Forward the exposed port 8080 to the container to port 8080 on the host machine
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
    networks:
      - adidas-network
    links:
      - docker-mysql
      - api-gateway
      - discovery-server
      - rabbitmq
    depends_on:
      - docker-mysql
      - api-gateway
      - discovery-server
      - rabbitmq
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  #back-end Spring Boot Application for email service
  email-service:
    #the docker file in scrum-app build the jar and provides the docker image with the following name.
    build: ./email-service
    container_name: email-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      RABBIT_HOST: rabbitmq
    ports:
      - 7601:7601 # Forward the exposed port 8880 to the container to port 8880 on the host machine
    networks:
      - adidas-network
    links:
      - discovery-server
      - authorization-server
      - api-gateway
      - rabbitmq
    depends_on:
      - discovery-server
      - authorization-server
      - api-gateway
      - rabbitmq
    restart: on-failure


  #back-end Spring Boot Application for public service
  public-service:
    #the docker file in scrum-app build the jar and provides the docker image with the following name.
    build: ./public-service
    container_name: public-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      RABBIT_HOST: rabbitmq
    ports:
      - 7602:7602 # Forward the exposed port 8881 to the container to port 8881 on the host machine
    networks:
      - adidas-network
    links:
      - discovery-server
      - api-gateway
      - rabbitmq
    depends_on:
      - discovery-server
      - api-gateway
      - rabbitmq
    restart: on-failure

  #back-end Spring Boot Application for subscription service
  subscription-service:
    #the docker file in scrum-app build the jar and provides the docker image with the following name.
    build: ./subscription-service
    container_name: subscription-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      RABBIT_HOST: rabbitmq
    ports:
      - 7603:7603 # Forward the exposed port 8882 to the container to port 8882 on the host machine
    networks:
      - adidas-network
    links:
      - discovery-server
      - api-gateway
      - authorization-server
      - rabbitmq
    depends_on:
      - discovery-server
      - api-gateway
      - authorization-server
      - rabbitmq
    restart: on-failure

# Names our volume
volumes:
  my-db:

# Services Network
networks:
  adidas-network:
    name: adidas-network
    driver: bridge

